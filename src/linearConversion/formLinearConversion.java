/*
 * Nigel Howarth Shute 
 * linearConversion.java
 * 01/05/2018
 */

package linearConversion;
import java.text.*;
/**
 *
 * @author nihow4926
 */
public class formLinearConversion extends javax.swing.JFrame {

    /**
     * Creates new form formLinearConversion
     */
    public formLinearConversion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        valueField = new javax.swing.JTextField();
        convertButton = new javax.swing.JButton();
        outputLabel = new javax.swing.JLabel();
        feetToCentimetres = new javax.swing.JRadioButton();
        yardsToMetres = new javax.swing.JRadioButton();
        milesToKilometres = new javax.swing.JRadioButton();
        inchesToCentimetres = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        centimetresToInches = new javax.swing.JRadioButton();
        centimetresToFeet = new javax.swing.JRadioButton();
        metresToYards = new javax.swing.JRadioButton();
        kilometresToMiles = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Choose Conversion (ONLY ONE)");

        valueField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueFieldActionPerformed(evt);
            }
        });

        convertButton.setText("CONVERT");
        convertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertButtonActionPerformed(evt);
            }
        });

        feetToCentimetres.setText("Feet to Centimetres");
        feetToCentimetres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feetToCentimetresActionPerformed(evt);
            }
        });

        yardsToMetres.setText("Yards to Metres");

        milesToKilometres.setText("Miles to Kilometres");

        inchesToCentimetres.setText("Inches to Centimetres");
        inchesToCentimetres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inchesToCentimetresActionPerformed(evt);
            }
        });

        jLabel2.setText("Enter a value to be converted:");

        centimetresToInches.setText("Centimetres to Inches");
        centimetresToInches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                centimetresToInchesActionPerformed(evt);
            }
        });

        centimetresToFeet.setText("centimetres to feet");

        metresToYards.setText("metres to yards");
        metresToYards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metresToYardsActionPerformed(evt);
            }
        });

        kilometresToMiles.setText("kilometres to miles");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("LINEAR CONVERSION");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(convertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(valueField, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(115, 115, 115))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(outputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(feetToCentimetres)
                            .addComponent(inchesToCentimetres)
                            .addComponent(yardsToMetres)
                            .addComponent(kilometresToMiles))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(milesToKilometres)
                            .addComponent(metresToYards)
                            .addComponent(centimetresToFeet)
                            .addComponent(centimetresToInches)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inchesToCentimetres)
                    .addComponent(centimetresToInches))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(feetToCentimetres)
                    .addComponent(centimetresToFeet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yardsToMetres)
                    .addComponent(metresToYards))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kilometresToMiles)
                    .addComponent(milesToKilometres))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(convertButton)
                .addGap(8, 8, 8)
                .addComponent(outputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inchesToCentimetresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inchesToCentimetresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inchesToCentimetresActionPerformed

    private void centimetresToInchesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_centimetresToInchesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_centimetresToInchesActionPerformed

    private void metresToYardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metresToYardsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_metresToYardsActionPerformed

    private void convertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertButtonActionPerformed
        
        //this determines the method that will run depending on which conversion the user chooses
  
        double value;
        value = Double.parseDouble(valueField.getText());
        
        DecimalFormat x = new DecimalFormat("###.##");
        
        if (inchesToCentimetres.isSelected())
            outputLabel.setText(value+" inches = "+x.format(inchesToCentimetres(value))+"centimetres");
        
        else if (feetToCentimetres.isSelected())
            feetToCentimetres(value);
        
        else if (yardsToMetres.isSelected())
            yardsToMetres(value);
        
        else if (kilometresToMiles.isSelected())
            kilometresToMiles(value);
        
        else if (centimetresToInches.isSelected())
            centimetresToInches(value);
        
        else if (centimetresToFeet.isSelected())
            centimetresToFeet(value);
        
        else if (metresToYards.isSelected())
            metresToYards(value);
        
        else if (milesToKilometres.isSelected())
            milesToKilometres(value);
        
        else outputLabel.setText("please choose conversion");
            
    }//GEN-LAST:event_convertButtonActionPerformed

    private void feetToCentimetresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feetToCentimetresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feetToCentimetresActionPerformed

    private void valueFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueFieldActionPerformed

    /**
     * converts a a value in inches to centimetres
     * @param value
     */   
    private double inchesToCentimetres (double value){
        double centimetres;
        centimetres = value*2.54;
                  
        return centimetres;
    }
    /**
     * converts a value in feet to centimetres          
     * @param value 
     */
    private void feetToCentimetres (double value){
        double centimetres;
        centimetres = value*30;
        DecimalFormat x = new DecimalFormat("###.##");
        outputLabel.setText(value+" feet = "+x.format(centimetres)+"centimetres");
    }
    /**
     * converts a value in yards to metres
     * @param value 
     */
    private void yardsToMetres (double value){
        double metres;
        metres = value*0.91;
        DecimalFormat x = new DecimalFormat("###.##");
        outputLabel.setText(value+" yards = "+x.format(metres)+"metres");
    }
    /**
     * converts a value in kilometres to miles
     * @param value 
     */
    private void kilometresToMiles (double value){
        double miles;
        miles = value/1.6;
        DecimalFormat x = new DecimalFormat("###.##");
        
        outputLabel.setText(value+" kilometres = "+x.format(miles)+"miles");
    }    
    /**
     * converts a value in centimetres to inches
     * @param value 
     */
    private void centimetresToInches(double value){
        double inches;
        inches=value/2.54;
        DecimalFormat x = new DecimalFormat("###.##");
        outputLabel.setText(value+" centimetres = "+x.format(inches)+"inches");        
    }
    /**
     * converts a value in centimetres to feet
     * @param value 
     */
    private void centimetresToFeet (double value){
        double feet;
        feet = value/30;
        DecimalFormat x = new DecimalFormat("###.##");
        outputLabel.setText(value+" centimetres = "+x.format(feet)+"feet");
    }
    /**
     * converts a value in metres to yards
     * @param value 
     */
    private void metresToYards (double value){
        double yards;
        yards = value/0.91;
        DecimalFormat x = new DecimalFormat("###.##");
        outputLabel.setText(value+" metres = "+x.format(yards)+"yards");
    }
    /**
     * converts a value in miles to kilometres
     * @param value 
     */
    private void milesToKilometres (double value){
        double kilometres;
        kilometres = value/1.6;
        DecimalFormat x = new DecimalFormat("###.##");
        
        outputLabel.setText(value+" miles = "+x.format(kilometres)+"kilometres");
    }
  
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formLinearConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formLinearConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formLinearConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formLinearConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formLinearConversion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton centimetresToFeet;
    private javax.swing.JRadioButton centimetresToInches;
    private javax.swing.JButton convertButton;
    private javax.swing.JRadioButton feetToCentimetres;
    private javax.swing.JRadioButton inchesToCentimetres;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JRadioButton kilometresToMiles;
    private javax.swing.JRadioButton metresToYards;
    private javax.swing.JRadioButton milesToKilometres;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JTextField valueField;
    private javax.swing.JRadioButton yardsToMetres;
    // End of variables declaration//GEN-END:variables
}
